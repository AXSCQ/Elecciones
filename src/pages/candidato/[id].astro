---
import { candidates } from '../../data/candidates.js';
import { parties, getPartyByShortName } from '../../data/parties.js';
import Layout from '../../layouts/Layout.astro';
import Timeline from '../../components/react/Timeline';
import Header from '../../components/react/Header.jsx';

// ¡SOLUCIÓN AL ERROR! Exporta getStaticPaths para rutas dinámicas
export async function getStaticPaths() {
  return candidates.map(candidate => ({
    params: { id: candidate.id }
  }));
}

const { id } = Astro.params;
const candidate = candidates.find(c => c.id === id);

if (!candidate) {
  return Astro.redirect('/404');
}

// Obtener el partido del candidato
const party = getPartyByShortName(candidate.partyShort);
---

<Layout title={`${candidate.name} - Candidato Presidencial | Elecciones Bolivia 2025`}>
  <Header />
  <main class="min-h-screen bg-gradient-to-b from-blue-900 to-blue-950 py-16 px-4">
    <div class="container mx-auto">
      <div class="bg-black/40 backdrop-blur-md rounded-xl overflow-hidden border border-white/10 shadow-xl mb-8">
        <!-- Hero section con imagen y datos básicos -->
        <div class="md:flex">
          <div class="md:w-1/3 relative">
            <div class="aspect-[3/4] overflow-hidden">
              <img 
                src={candidate.image} 
                alt={candidate.name} 
                class="w-full h-full object-cover object-top" 
              />
            </div>
            
            <!-- Badge del partido -->
            <div 
              class="absolute top-4 right-4 px-4 py-2 rounded-full text-white font-bold shadow-lg"
              style={`background-color: ${candidate.partyColor || '#3045b5'}`}
            >
              {candidate.partyShort}
            </div>
          </div>
          
          <div class="p-6 md:w-2/3 text-white">
            <h1 class="text-4xl font-bold mb-2">{candidate.name}</h1>
            <p class="text-xl text-gray-300 mb-6">{candidate.party}</p>
            
            <div class="prose prose-invert max-w-none mb-6">
              <p class="text-gray-200">{candidate.bio}</p>
            </div>
            
            <!-- Datos adicionales -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
              {candidate.education && (
                <div class="bg-white/10 p-4 rounded-lg">
                  <h3 class="font-bold text-lg mb-2">Educación</h3>
                  <p class="text-gray-300">{candidate.education}</p>
                </div>
              )}
              
              {candidate.profession && (
                <div class="bg-white/10 p-4 rounded-lg">
                  <h3 class="font-bold text-lg mb-2">Profesión</h3>
                  <p class="text-gray-300">{candidate.profession}</p>
                </div>
              )}
              
              {party && (
                <div class="bg-white/10 p-4 rounded-lg">
                  <h3 class="font-bold text-lg mb-2">Afiliación Política</h3>
                  <a href={`/partido/${party.id}`} class="text-blue-300 hover:underline">{party.name}</a>
                </div>
              )}
              
              {candidate.age && (
                <div class="bg-white/10 p-4 rounded-lg">
                  <h3 class="font-bold text-lg mb-2">Edad</h3>
                  <p class="text-gray-300">{candidate.age} años</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Trayectoria Política con Timeline -->
      <div class="bg-black/40 backdrop-blur-md p-6 rounded-xl border border-white/10 shadow-xl mb-8">
        <h2 class="text-2xl font-bold mb-6 text-white">Trayectoria Política</h2>
        <Timeline events={candidate.timeline} client:load />
      </div>
      
      <!-- Propuestas principales -->
      <div class="bg-black/40 backdrop-blur-md p-6 rounded-xl border border-white/10 shadow-xl mb-8">
        <h2 class="text-2xl font-bold mb-6 text-white">Propuestas Principales</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {candidate.proposals.map((proposal, index) => (
            <div 
              class="p-5 rounded-lg transition-all duration-300 hover:scale-105"
              style={`background-color: ${candidate.partyColor}20; border-left: 4px solid ${candidate.partyColor}`}
            >
              <span class="inline-block w-8 h-8 rounded-full bg-white/20 text-white font-bold flex items-center justify-center mb-3">{index + 1}</span>
              <p class="text-white">{proposal}</p>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Botones de navegación -->
      <div class="flex justify-between items-center mt-8">
        <a href="/candidatos" class="px-6 py-3 bg-gray-700 text-white rounded-md hover:bg-gray-600 transition-colors">
          ← Volver a candidatos
        </a>
        {party && (
          <a href={`/partido/${party.id}`} class="px-6 py-3 text-white rounded-md transition-colors" style={`background-color: ${candidate.partyColor}`}>
            Ver partido: {party.name} →
          </a>
        )}
      </div>
    </div>
  </main>
</Layout>
